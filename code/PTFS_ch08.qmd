---
title: "Practical Time Series Forecasting - Figures and Tables - Chapter 8"
format: html
editor: visual
execute:
  echo: true
  warning: false
---

Scripts adapted from [Practical Time Series Forecasting - Datasets & R Code](https://www.forecastingbook.com/resources/data-and-code)

## 8.4 Example: Rainfall in Melbourne, Australia

### Figure 8.1

```{r}
#| message: false
library(caret)
library(readxl)
library(lubridate)
library(tidyverse)

rain_xls <- here::here("data", "MelbourneRainfall.xls")
rain.df <- read_excel(rain_xls)
names(rain.df) <- c("Date", "Rainfall")

rain_year <- rain.df %>% 
  mutate(Rainy = ifelse(Rainfall > 0, 1, 0),
         Month = as_factor(month(Date)),
         Year = year(Date)) %>% 
  group_by(Month, Year) %>% 
  summarise(p_rain = sum(Rainy) / n()) 
rain_all <- rain_year %>% 
  group_by(Month) %>% 
  summarize(p_rain = mean(p_rain))
rain_year %>% 
  ggplot(aes(Month, p_rain)) +
  geom_line(aes(group = Year)) +
  geom_line(data = rain_all, color = "blue", group = 1)


```

### Table 8.1

```{r}
#| message: false
library(caret)
library(readxl)

rain_xls <- here::here("data", "MelbourneRainfall.xls")
rain.df <- read_excel(rain_xls)
names(rain.df) <- c("Date", "Rainfall")

rain.df$Date <- as.Date(rain.df$Date, format="%m/%d/%Y")
rain.df$Rainy <- ifelse(rain.df$Rainfall > 0, 1, 0)
nPeriods <- length(rain.df$Rainy)
rain.df$Lag1 <- c(NA,rain.df$Rainfall[1:(nPeriods-1)])
rain.df$t <- seq(1, nPeriods, 1)
rain.df$Seasonal_sine = sin(2 * pi * rain.df$t / 365.25)
rain.df$Seasonal_cosine = cos(2 * pi * rain.df$t / 365.25)
train.df <- rain.df[rain.df$Date <= as.Date("12/31/2009", format="%m/%d/%Y"), ]
train.df <- train.df[-1,]
valid.df <- rain.df[rain.df$Date > as.Date("12/31/2009", format="%m/%d/%Y"), ]
xvalid <- valid.df[, c(4,6,7)]

head(rain.df)

```

### Table 8.2

```{r}

rainy.lr <- glm(Rainy ~ Lag1 + Seasonal_sine + Seasonal_cosine, data = train.df, family = "binomial")
summary(rainy.lr)
```

### Table 8.3

```{r}
rainy.lr.pred <- predict(rainy.lr, xvalid, type = "response") 
confusionMatrix(as.factor(ifelse(rainy.lr$fitted > 0.5, 1, 0)), 
                as.factor(train.df$Rainy), positive="1")
confusionMatrix(as.factor(ifelse(rainy.lr.pred > 0.5, 1, 0)), 
                as.factor(valid.df$Rainy), positive="1")
```

## 
